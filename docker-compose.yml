services:
  # db:
  #   container_name: temporal-ai-pipeline_db
  #   image: ankane/pgvector
  #   command: postgres -c 'max_connections=200'
  #   ports:
  #     - 5432:5432
  #   restart: always
  #   environment:
  #     - POSTGRES_HOST_AUTH_METHOD=trust
  #     - POSTGRES_PASSWORD=dbpassword
  #     - POSTGRES_USER=dbuser
  #     - POSTGRES_DB=vector_db

  # localstack:
  #   container_name: temporal-ai-pipeline_localstack
  #   image: localstack/localstack:s3-latest
  #   ports:
  #     - 4566:4566
  #   environment:
  #     - DEBUG=${DEBUG:-0}
  #     - AWS_DEFAULT_REGION=us-east-1
  #     - AWS_ACCESS_KEY_ID=testUser
  #     - AWS_SECRET_ACCESS_KEY=testAccessKey
  #   volumes:
  #     - "${TMPDIR:-/tmp}/localstack:/var/lib/localstack"
  #     - "/var/run/docker.sock:/var/run/docker.sock"

  worker:
    container_name: worker
    build:
      context: .
      dockerfile: src/worker/Dockerfile
    # depends_on:
    #   localstack:
    #     condition: service_healthy
    #   db:
    #     condition: service_started
    restart: always
    env_file:
      - .env
      # environment:
      # - AWS_URL=http://localstack:4566
      # - AWS_ACCESS_KEY_ID=testUser
      # - AWS_SECRET_ACCESS_KEY=testAccessKey
      # - DATABASE_CONNECTION_STRING=postgres://dbuser:dbpassword@db:5432/vector_db
      # - DATABASE_TABLE_NAME=vector_db
    volumes:
      - ./:/temporal-ai-pipeline-example
